# ------------------------------------
# Set the following for your specific environment
# Already have a Cluster? Set these values to point to your existing environment
# Otherwise, these values will be used to create a new Cluster

project ?= camunda-researchanddevelopment
region ?=  europe-west1-b # see: https://cloud.withgoogle.com/region-picker/
clusterName ?= falko-benchmark
# Azure provides temporary dns names such as:  MY_DOMAIN_NAME.region.cloudapp.azure.com
# However GCP does not. DNS names will be configured using https://nip.io
# dnsLabel ?= MY_DOMAIN_NAME
machineType ?= n2-standard-2
minSize ?= 1
maxSize ?= 24

# settings for additional Kubernetes node pool
nodePoolMachineType ?= c4-standard-32
nodePoolMinCpuPlatform ?= "Intel Emerald Rapids"
nodePoolTaints ?= dedicated=high-performance:PreferNoSchedule
#nodePoolTaints ?= dedicated=high-performance:PreferNoSchedule hyperdisk=required:NoSchedule

# only needed for Chaos Mesh
gcpClientId ?= GCP_CLIENT_ID # see: https://chaos-mesh.org/docs/next/gcp-authentication/
gcpClientSecret ?= GCP_CLIENT_SECRET # see: https://chaos-mesh.org/docs/next/gcp-authentication/

# ------------------------------------
# The following variables should not be changed except for advanced use cases

ifeq ($(OS),Windows_NT) 
    root ?= $(CURDIR)/../..
else 
    root ?= $(shell pwd)/../..
endif

# Camunda components will be installed into the following Kubernetes namespace
namespace ?= camunda
# Helm release name
release ?= camunda
# Helm chart coordinates for Camunda
chart ?= camunda/camunda-platform

# This file will be generated by make targets
chartValues ?= "$(root)/benchmark/camunda-values.yaml"

.PHONY: all
all: camunda await-zeebe deploy-models rebalance-leaders benchmark 

# 0 kube from cluster.mk: Create Kubernetes cluster. (No aplication gateway required)
.PHONY: kube
kube: kube-gke kube-node-pool metrics url-grafana
    
.PHONY: chaos-mesh
chaos-mesh:
	sed "s/YOUR_GCP_CLIENT_ID/$(gcpClientId)/g;" ./chaos-mesh-template.yaml > ./chaos-mesh-values-tmp.yaml
	sed "s/YOUR_GCP_CLIENT_SECRET/$(gcpClientSecret)/g;" ./chaos-mesh-values-tmp.yaml > ./chaos-mesh-values.yaml
	helm repo add chaos-mesh https://charts.chaos-mesh.org
	-git clone https://github.com/chaos-mesh/chaos-mesh.git
	-cd chaos-mesh && kubectl apply -f manifests/
	helm install chaos-mesh chaos-mesh/chaos-mesh -f chaos-mesh-values.yaml -n default --set chaosDaemon.runtime=containerd --set chaosDaemon.socketPath=/run/containerd/containerd.sock
	kubectl wait --for=condition=Ready pod -n default -l app.kubernetes.io/instance=chaos-mesh --timeout=900s
	kubectl delete validatingWebhookConfigurations.admissionregistration.k8s.io chaos-mesh-validation-auth

.PHONY: chaos-experiment
chaos-experiment:
	kubectl apply -f chaos-network-brokers.yaml -n default

.PHONY: clean
clean: clean-benchmark clean-chaos-experiment clean-camunda

.PHONY: clean-chaos-experiment
clean-chaos-experiment:
	-kubectl delete -f chaos-network-brokers.yaml -n default

.PHONY: clean-chaos-mesh
clean-chaos-mesh:
	-rm -rf chaos-mesh
	-rm -f chaos-mesh-values.yaml
	-helm --namespace default uninstall chaos-mesh

.PHONY: clean-kube
clean-kube: clean-metrics clean-chaos-mesh clean-kube-node-pool clean-kube-gke

include $(root)/include/camunda.mk
include $(root)/benchmark/benchmark.mk
include $(root)/google/include/kubernetes-gke.mk
include $(root)/metrics/metrics.mk
