# Chart values for the Camunda Platform 8 Helm chart.
# This file deliberately contains only the values that differ from the defaults.
# For changes and documentation, use your favorite diff tool to compare it with:
# https://github.com/camunda/camunda-platform-helm/blob/main/charts/camunda-platform/values.yaml

global:
  ingress:
    enabled: true
    className: nginx
    host: "YOUR_HOSTNAME"
    tls:
      enabled: true
      secretName: "tls-secret"

  identity:
    auth:
      publicIssuerUrl: "https://YOUR_HOSTNAME/auth/realms/camunda-platform"
      operate:
        redirectUrl: "https://YOUR_HOSTNAME/operate"
      tasklist:
        redirectUrl: "https://YOUR_HOSTNAME/tasklist"
      optimize:
        redirectUrl: "https://YOUR_HOSTNAME/optimize"
      connectors:
        redirectUrl: "https://YOUR_HOSTNAME/connectors"
      webModeler:
        redirectUrl: "https://YOUR_HOSTNAME/modeler"

operate:
  #  nodeSelector:
  #    alpha.eksctl.io/nodegroup-name: c6i-2xlarge
  migration:
    env:
      - name: "CAMUNDA_OPERATE_ELASTICSEARCH_USERNAME"
        value: "elastic"
      - name: "CAMUNDA_OPERATE_ELASTICSEARCH_PASSWORD"
        value: "jothi"
      - name: "CAMUNDA_OPERATE_ELASTICSEARCH_URL"
        value: "https://camunda-elasticsearch:9200"
      - name: "CAMUNDA_OPERATE_ELASTICSEARCH_SSL_SELFSIGNED"
        value: "true"
      - name: "CAMUNDA_OPERATE_ELASTICSEARCH_SSL_VERIFYHOSTNAME"
        value: "false"
      - name: "CAMUNDA_OPERATE_ELASTICSEARCH_SSL_CERTIFICATEPATH"
        value: "/etc/tls/tls.crt"
      - name: "CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_USERNAME"
        value: "elastic"
      - name: "CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_PASSWORD"
        value: "jothi"
      - name: "CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_URL"
        value: "https://camunda-elasticsearch:9200"
      - name: "CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_SSL_SELFSIGNED"
        value: "true"
      - name: "CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_SSL_VERIFYHOSTNAME"
        value: "false"
      - name: "CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_SSL_CERTIFICATEPATH"
        value: "/etc/tls/tls.crt"

  contextPath: "/operate"
  extraVolumes:
    - name: tls-certificates
      secret:
        secretName: poc-cert #secret used at the gateway to enable client-gateway communication. In this example this is also the same secret used for ES as well
  extraVolumeMounts:
    - name: tls-certificates
      readOnly: true
      mountPath: /etc/tls/
  env:
    - name: "CAMUNDA_OPERATE_ELASTICSEARCH_USERNAME"
      value: "elastic"
    - name: "CAMUNDA_OPERATE_ELASTICSEARCH_PASSWORD"
      value: "jothi"
    - name: "CAMUNDA_OPERATE_ELASTICSEARCH_URL"
      value: "https://camunda-elasticsearch:9200"
    - name: "CAMUNDA_OPERATE_ELASTICSEARCH_SSL_SELFSIGNED"
      value: "true"
    - name: "CAMUNDA_OPERATE_ELASTICSEARCH_SSL_VERIFYHOSTNAME"
      value: "false"
    - name: "CAMUNDA_OPERATE_ELASTICSEARCH_SSL_CERTIFICATEPATH"
      value: "/etc/tls/tls.crt"
    - name: "CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_USERNAME"
      value: "elastic"
    - name: "CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_PASSWORD"
      value: "jothi"
    - name: "CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_URL"
      value: "https://camunda-elasticsearch:9200"
    - name: "CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_SSL_SELFSIGNED"
      value: "true"
    - name: "CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_SSL_VERIFYHOSTNAME"
      value: "false"
    - name: "CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_SSL_CERTIFICATEPATH"
      value: "/etc/tls/tls.crt"
    - name: CAMUNDA_OPERATE_ZEEBE_SECURE
      value: "true"
    - name: CAMUNDA_OPERATE_ZEEBE_CERTIFICATEPATH
      value: "/etc/tls/tls.crt"
    - name: CAMUNDA_OPERATE_ZEEBE_GATEWAYADDRESS
      value: camunda-zeebe-gateway.camunda.svc.cluster.local:26500

tasklist:
  #  nodeSelector:
  #    alpha.eksctl.io/nodegroup-name: c6i-2xlarge
  contextPath: "/tasklist"
  extraVolumes:
    - name: tls-certificates
      secret:
        secretName: poc-cert #secret used at the gateway to enable client-gateway communication. In this example this is also the same secret used for ES as well
  extraVolumeMounts:
    - name: tls-certificates
      readOnly: true
      mountPath: /etc/tls/
  env:
    - name: "CAMUNDA_TASKLIST_ELASTICSEARCH_USERNAME"
      value: "elastic"
    - name: "CAMUNDA_TASKLIST_ELASTICSEARCH_PASSWORD"
      value: "jothi"
    - name: "CAMUNDA_TASKLIST_ELASTICSEARCH_URL"
      value: "https://camunda-elasticsearch:9200"
    - name: "CAMUNDA_TASKLIST_ELASTICSEARCH_SSL_SELFSIGNED"
      value: "true"
    - name: "CAMUNDA_TASKLIST_ELASTICSEARCH_SSL_VERIFYHOSTNAME"
      value: "false"
    - name: "CAMUNDA_TASKLIST_ELASTICSEARCH_SSL_CERTIFICATEPATH"
      value: "/etc/tls/tls.crt"
    - name: "CAMUNDA_TASKLIST_ZEEBEELASTICSEARCH_USERNAME"
      value: "elastic"
    - name: "CAMUNDA_TASKLIST_ZEEBEELASTICSEARCH_PASSWORD"
      value: "jothi"
    - name: "CAMUNDA_TASKLIST_ZEEBEELASTICSEARCH_URL"
      value: "https://camunda-elasticsearch:9200"
    - name: "CAMUNDA_TASKLIST_ZEEBEELASTICSEARCH_SSL_SELFSIGNED"
      value: "true"
    - name: "CAMUNDA_TASKLIST_ZEEBEELASTICSEARCH_SSL_VERIFYHOSTNAME"
      value: "false"
    - name: "CAMUNDA_TASKLIST_ZEEBEELASTICSEARCH_SSL_CERTIFICATEPATH"
      value: "/etc/tls/tls.crt"
    - name: CAMUNDA_TASKLIST_ZEEBE_SECURE
      value: "true"
    - name: CAMUNDA_TASKLIST_ZEEBE_CERTIFICATEPATH
      value: "/etc/tls/tls.crt"
    - name: CAMUNDA_TASKLIST_ZEEBE_GATEWAYADDRESS
      value: camunda-zeebe-gateway.camunda.svc.cluster.local:26500

optimize:
  enabled: false
  #  nodeSelector:
  #    alpha.eksctl.io/nodegroup-name: c6i-2xlarge
  contextPath: "/optimize"

connectors:
  enabled: false

#  env:
#    - name: CAMUNDA_OPERATE_CLIENT_USERNAME
#      value: demo
#    - name: CAMUNDA_OPERATE_CLIENT_PASSWORD
#      value: demo

webModeler:
  enabled: false

postgresql:
  enabled: false

prometheusServiceMonitor:
  enabled: true

identity:
  #  nodeSelector:
  #    alpha.eksctl.io/nodegroup-name: c6i-2xlarge
  contextPath: "/identity"
  fullURL: "https://YOUR_HOSTNAME/identity"

identityKeycloak:
  extraEnvVars:
    - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: KEYCLOAK_FRONTEND_URL
      value: "https://YOUR_HOSTNAME/auth"

zeebe-gateway:
  #  nodeSelector:
  #    alpha.eksctl.io/nodegroup-name: c6i-2xlarge
  ingress:
    grpc:
      enabled: true
      className: nginx
      host: "YOUR_HOSTNAME"
      tls:
        enabled: true
        secretName: "tls-secret"
  replicas: 1
  extraVolumes:
    # NOTE: For the sake of simplicity -
    # the same secret is used to create the CA cert for ES SSL certificates and
    #  also for SSL Communication in the Zeebe cluster.
    - name: tls-certificates
      secret:
        secretName: poc-cert
  extraVolumeMounts:
    - name: tls-certificates
      readOnly: true
      mountPath: /etc/tls/
  env:
    #cluster security - refer https://docs.camunda.io/docs/8.5/self-managed/zeebe-deployment/security/secure-cluster-communication/#broker
    - name: ZEEBE_GATEWAY_CLUSTER_SECURITY_ENABLED
      value: "true"
    - name: ZEEBE_GATEWAY_CLUSTER_SECURITY_CERTIFICATECHAINPATH
      value: "/etc/tls/tls.crt"
    - name: ZEEBE_GATEWAY_CLUSTER_SECURITY_PRIVATEKEYPATH
      value: "/etc/tls/tls.key"
    #Security between gateway & clients - refer https://docs.camunda.io/docs/8.5/self-managed/zeebe-deployment/security/secure-client-communication/#grpc
    - name: ZEEBE_GATEWAY_SECURITY_ENABLED
      value: "true"
    - name: ZEEBE_GATEWAY_SECURITY_CERTIFICATECHAINPATH
      value: "/etc/tls/tls.crt"
    - name: ZEEBE_GATEWAY_SECURITY_PRIVATEKEYPATH
      value: "/etc/tls/tls.key"

zeebe:
  #  nodeSelector:
  #    alpha.eksctl.io/nodegroup-name: c6i-2xlarge
  clusterSize: 3
  partitionCount: 3
  replicationFactor: 3
  extraInitContainers:
    - name: import-certificate
      image: openjdk:11 # Use the appropriate Java image
      command: [ 'sh', '-c' ]
      args:
        - |
          keytool -import -trustcacerts -keystore /tmp/custom-keystore/elasticsearch.jks -storetype jks -storepass changeit -noprompt -alias elasticsearch -file /etc/tls/tls.crt;
      securityContext:
        runAsUser: 1000 # UID of the non-root user
        runAsGroup: 1000 # GID of the non-root user
      volumeMounts:
        - name: tls-certificates
          mountPath: "/etc/tls/"
          readOnly: true
        - name: custom-keystore
          mountPath: /tmp/custom-keystore
  extraVolumes:
    # NOTE: For the sake of simplicity -
    # the same secret is used to create the CA cert for ES SSL certificates and
    #  also for SSL Communication within the Zeebe cluster.
    - name: tls-certificates
      secret:
        secretName: poc-cert
    - name: custom-keystore
      emptyDir: { }
  extraVolumeMounts:
    - name: tls-certificates
      readOnly: true
      mountPath: /etc/tls/
    - name: custom-keystore
      mountPath: /tmp/custom-keystore
  env:
    - name: "ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_AUTHENTICATION_USERNAME"
      value: "elastic"
    - name: "ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_AUTHENTICATION_PASSWORD"
      value: "jothi"
    - name: "ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_URL"
      value: "https://camunda-elasticsearch:9200"
    - name: "ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_SSL_ENABLED"
      value: "true"
    - name: "ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_SSL_VERIFYHOSTNAME"
      value: "false"
    - name: "ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_SSL_CERTIFICATEPATH"
      value: "/etc/tls/tls.crt"
    - name: "JAVA_TOOL_OPTIONS"
      value: "-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/usr/local/zeebe/data -XX:ErrorFile=/usr/local/zeebe/data/zeebe_error%p.log -XX:+ExitOnOutOfMemoryError -Djavax.net.ssl.trustStore=/tmp/custom-keystore/elasticsearch.jks -Djavax.net.ssl.trustStorePassword=changeit"
      #cluster security - refer https://docs.camunda.io/docs/8.5/self-managed/zeebe-deployment/security/secure-cluster-communication/#broker
    - name: "ZEEBE_BROKER_NETWORK_SECURITY_ENABLED"
      value: "true"
    - name: "ZEEBE_BROKER_NETWORK_SECURITY_CERTIFICATECHAINPATH"
      value: "/etc/tls/tls.crt"
    - name: "ZEEBE_BROKER_NETWORK_SECURITY_PRIVATEKEYPATH"
      value: "/etc/tls/tls.key"

elasticsearch:
  enabled: true
  extraEnvVars:
    - name: XPACK_SECURITY_AUDIT_ENABLED
      value: "true"
    - name: XPACK_SECURITY_HTTP_SSL_ENABLED
      value: "true"
    - name: ELASTICSEARCH_ENABLE_SECURITY
      value: "true"
    - name: ELASTICSEARCH_PASSWORD
      value: "jothi"
    - name: ELASTICSEARCH_SKIP_TRANSPORT_TLS
      value: "false"
    - name: ELASTICSEARCH_ENABLE_REST_TLS
      value: "true"
    - name: ELASTICSEARCH_TLS_VERIFICATION_MODE
      value: "certificate"
    - name: ELASTICSEARCH_TRANSPORT_TLS_KEYSTORE_LOCATION
      value: "/opt/bitnami/elasticsearch/config/ssl-cert/keystore.p12"
    - name: ELASTICSEARCH_TRANSPORT_TLS_TRUSTSTORE_LOCATION
      value: "/opt/bitnami/elasticsearch/config/ssl-cert/keystore.p12"
    - name: ELASTICSEARCH_HTTP_TLS_KEYSTORE_LOCATION
      value: "/opt/bitnami/elasticsearch/config/ssl-cert/keystore.p12"
    - name: ELASTICSEARCH_HTTP_TLS_TRUSTSTORE_LOCATION
      value: "/opt/bitnami/elasticsearch/config/ssl-cert/keystore.p12"
    - name: ELASTICSEARCH_CERTS_DIR
      value: "/opt/bitnami/elasticsearch/config/ssl-cert"

  # share generated cert
  extraVolumes:
    - name: tls-certificates
      emptyDir: { }
    - name: ca-certificates
      secret:
        secretName: poc-cert
# NOTE: For the sake of simplicity -
# the same secret is used to create the CA cert for ES SSL certificates and
#  also for SSL Communication within the Zeebe cluster.

  # for the generated cert
  extraVolumeMounts:
    - name: tls-certificates
      mountPath: /opt/bitnami/elasticsearch/config/ssl-cert

  # define container to build the cert
  initContainers:
    - name: setup-tls-cert
      image: "docker.io/bitnami/elasticsearch:8.12.2"
      command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash
          
          elasticsearch-certutil cert \
            --name ${NODE_NAME} \
            --days 1000 \
            --ip ${POD_IP} \
            --dns ${NODE_NAME},${POD_SERVICE_NAME},${POD_SERVICE_NAME_HEADLESS},${NODE_NAME}.${POD_SERVICE_NAME},${NODE_NAME}.${POD_SERVICE_NAME_HEADLESS} \
            --ca-cert /opt/bitnami/elasticsearch/config/ca-cert/tls.crt \
            --ca-key /opt/bitnami/elasticsearch/config/ca-cert/tls.key  \
            --ca-pass "" \
            --pass "" \
            --out /opt/bitnami/elasticsearch/config/ssl-cert/keystore.p12
      env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_SERVICE_NAME
          value: "camunda-elasticsearch"
        - name: POD_SERVICE_NAME_HEADLESS
          value: "camunda-elasticsearch-master-hl"
      volumeMounts:
        - name: ca-certificates
          mountPath: /opt/bitnami/elasticsearch/config/ca-cert
        - name: tls-certificates
          mountPath: /opt/bitnami/elasticsearch/config/ssl-cert






